schemaVersion: "2.2"
description: "AGESIC Data Lake - Install Kinesis Agent and Fluentd"
parameters:
  kinesisStreamName:
    type: String
    description: "Kinesis stream name"
  agentType:
    type: String
    description: "Agent type to install"
    allowedValues: ["kinesis_agent", "fluentd", "both"]
    default: "both"

mainSteps:
  - action: "aws:runShellScript"
    name: "installAgents"
    inputs:
      timeoutSeconds: "600"
      runCommand:
        - "#!/bin/bash"
        - "set -e"
        - "log() { echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a /var/log/agents-setup.log; }"
        - ""
        - "AGENT_TYPE='{{ agentType }}'"
        - "KINESIS_STREAM='{{ kinesisStreamName }}'"
        - ""
        - "log '=== Installing Agents: $AGENT_TYPE ==='"
        - ""
        - "# Install Kinesis Agent if requested"
        - "if [ \"$AGENT_TYPE\" = \"kinesis_agent\" ] || [ \"$AGENT_TYPE\" = \"both\" ]; then"
        - "    log 'Installing AWS Kinesis Agent'"
        - "    "
        - "    # Install Java (required for Kinesis Agent)"
        - "    log 'Installing Java'"
        - "    yum install -y java-1.8.0-openjdk"
        - "    "
        - "    # Download and install Kinesis Agent"
        - "    log 'Downloading Kinesis Agent'"
        - "    cd /tmp"
        - "    wget -q https://s3.amazonaws.com/kinesis-agent-us-east-1/aws-kinesis-agent-latest.amzn2.noarch.rpm"
        - "    yum install -y aws-kinesis-agent-latest.amzn2.noarch.rpm"
        - "    "
        - "    # Create Kinesis Agent configuration"
        - "    log 'Creating Kinesis Agent configuration'"
        - "    mkdir -p /etc/aws-kinesis"
        - "    "
        - "    cat > /etc/aws-kinesis/agent.json << 'KINESIS_EOF'"
        - "{"
        - '  "cloudwatch.emitMetrics": true,'
        - '  "cloudwatch.endpoint": "https://monitoring.us-east-2.amazonaws.com",'
        - '  "kinesis.endpoint": "https://kinesis.us-east-2.amazonaws.com",'
        - '  "flows": ['
        - "    {"
        - '      "filePattern": "/var/log/logs_f5/f5_logs_*.txt",'
        - '      "kinesisStream": "'$KINESIS_STREAM'",'
        - '      "partitionKeyOption": "RANDOM",'
        - '      "initialPosition": "START_OF_FILE",'
        - '      "maxBufferAgeMillis": 5000,'
        - '      "maxBufferSizeRecords": 500,'
        - '      "dataProcessingOptions": ['
        - "        {"
        - '          "optionName": "LOGTOJSON",'
        - '          "logFormat": "COMBINEDAPACHELOG"'
        - "        }"
        - "      ]"
        - "    }"
        - "  ]"
        - "}"
        - "KINESIS_EOF"
        - "    "
        - "    # Set permissions"
        - "    chown aws-kinesis-agent-user:aws-kinesis-agent-user /etc/aws-kinesis/agent.json"
        - "    chmod 644 /etc/aws-kinesis/agent.json"
        - "    "
        - "    # Enable service (but don't start automatically)"
        - "    systemctl enable aws-kinesis-agent"
        - "    log 'Kinesis Agent installed and configured successfully'"
        - "fi"
        - ""
        - "# Install Fluentd if requested"
        - "if [ \"$AGENT_TYPE\" = \"fluentd\" ] || [ \"$AGENT_TYPE\" = \"both\" ]; then"
        - "    log 'Installing Fluentd (td-agent)'"
        - "    "
        - "    # Install td-agent"
        - "    log 'Installing td-agent'"
        - "    curl -fsSL https://toolbelt.treasuredata.com/sh/install-amazon2-td-agent4.sh | sh"
        - "    "
        - "    # Install Kinesis plugin"
        - "    log 'Installing Kinesis plugin'"
        - "    /opt/td-agent/bin/fluent-gem install fluent-plugin-kinesis"
        - "    "
        - "    # Create buffer directory"
        - "    mkdir -p /var/log/td-agent/buffer/kinesis"
        - "    chown td-agent:td-agent /var/log/td-agent/buffer/kinesis"
        - "    "
        - "    # Create Fluentd configuration"
        - "    log 'Creating Fluentd configuration'"
        - "    cat > /etc/td-agent/td-agent.conf << 'FLUENTD_EOF'"
        - "# AGESIC Data Lake - Fluentd Configuration for F5 Logs"
        - ""
        - "<source>"
        - "  @type tail"
        - "  path /var/log/logs_f5/f5_logs_*.txt"
        - "  pos_file /var/log/td-agent/f5_logs.log.pos"
        - "  tag f5.access"
        - "  format none"
        - "  read_from_head true"
        - "  refresh_interval 10"
        - "</source>"
        - ""
        - "# Add processing metadata"
        - "<filter f5.access>"
        - "  @type record_transformer"
        - "  <record>"
        - "    log_type f5_access"
        - "    processed_at ${time}"
        - "    processed_by fluentd"
        - "    agent_version td-agent-4"
        - "  </record>"
        - "</filter>"
        - ""
        - "# Send to Kinesis Data Stream"
        - "<match f5.access>"
        - "  @type kinesis_streams"
        - "  region us-east-2"
        - "  stream_name '$KINESIS_STREAM'"
        - "  partition_key f5_logs"
        - ""
        - "  # Buffer configuration"
        - "  <buffer>"
        - "    @type file"
        - "    path /var/log/td-agent/buffer/kinesis"
        - "    flush_mode interval"
        - "    flush_interval 10s"
        - "    chunk_limit_size 1m"
        - "    queue_limit_length 32"
        - "    retry_max_interval 30"
        - "    retry_forever true"
        - "  </buffer>"
        - ""
        - "  # Format as JSON"
        - "  <format>"
        - "    @type json"
        - "  </format>"
        - "</match>"
        - ""
        - "# System logging"
        - "<system>"
        - "  log_level info"
        - "</system>"
        - "FLUENTD_EOF"
        - "    "
        - "    # Set permissions"
        - "    chown td-agent:td-agent /etc/td-agent/td-agent.conf"
        - "    chmod 644 /etc/td-agent/td-agent.conf"
        - "    "
        - "    # Enable service (but don't start automatically)"
        - "    systemctl enable td-agent"
        - "    log 'Fluentd installed and configured successfully'"
        - "fi"
        - ""
        - "# Create agent management script"
        - "log 'Creating agent management script'"
        - "export WORK_DIR='/opt/agesic-datalake'"
        - "mkdir -p $WORK_DIR"
        - ""
        - "cat > $WORK_DIR/manage_agents.sh << 'MANAGE_EOF'"
        - "#!/bin/bash"
        - "# AGESIC Data Lake - Agent Management Script"
        - "echo 'Agent management functionality available'"
        - "echo 'Use: systemctl start/stop/restart aws-kinesis-agent'"
        - "echo 'Use: systemctl start/stop/restart td-agent'"
        - "echo 'Use: systemctl start/stop/restart f5-processor.timer'"
        - "MANAGE_EOF"
        - ""
        - "chmod +x $WORK_DIR/manage_agents.sh"
        - "chown ec2-user:ec2-user $WORK_DIR/manage_agents.sh"
        - ""
        - "log 'Agent installation completed successfully'"
